type Terminal @entity {
  # Terminal address
  id: ID!

  poolCount: Int!
}

type Token @entity {
  # token address
  id: ID!

  symbol: String!
  name: String!
  decimals: BigInt!
}

type Pool @entity {
  # CLR Pool address
  id: ID!

  token0: Token
  token1: Token
  lowerTick: Int
  upperTick: Int
  ticks: [BigInt!]

  owner: User
  manager: User
  rewards: [Reward!]
  rewardTokens: [Token!]
  rewardAmounts: [BigInt!]
  rewardAmountsPerWeek: [BigInt!]
  rewardsAreEscrowed: Boolean
  rewardDuration: BigInt

  tokenId: BigInt    # Uniswap LP Position
  poolFee: Int
  tradeFee: BigInt
  uniswapPool: Uniswap
  periodFinish: BigInt
  price: BigInt

  stakedToken: Token
  stakedTokenBalance: [BigInt!]
  bufferTokenBalance: [BigInt!]

  vestingPeriod: BigInt

  createdAt: BigInt

  deposits: [Deposit!] @derivedFrom(field: "pool")
  withdrawals: [Withdrawal!] @derivedFrom(field: "pool")
  claimedRewards: [RewardClaim!] @derivedFrom(field: "pool")
  rewardInitiations: [RewardInitiation!] @derivedFrom(field: "pool")
  vests: [Vest!] @derivedFrom(field: "pool")
  collects: [Collect!] @derivedFrom(field: "pool")
  reinvests: [Reinvest!] @derivedFrom(field: "pool")
}

type Reward @entity {
  # Pool - Token - id concatenation
  id: ID!

  token: Token!
  amount: BigInt!
  amountPerWeek: BigInt!
}

type Deposit @entity {
  # Deposit tx hash
  id: ID!

  user: User!
  pool: Pool!
  amount0: BigInt!
  amount1: BigInt!

  timestamp: BigInt!
}

type Withdrawal @entity {
  # Withdraw tx hash
  id: ID!

  user: User!
  pool: Pool!
  amount0: BigInt!
  amount1: BigInt!

  timestamp: BigInt!
}

type RewardClaim @entity {
  # Reward claim tx hash
  id: ID!

  user: User!
  pool: Pool!
  token: Token!
  amount: BigInt!

  timestamp: BigInt!

  txHash: String!
}

type RewardInitiation @entity {
  # Reward initiation tx hash
  id: ID!

  user: User!
  pool: Pool!
  rewards: [Reward!]
  tokens: [Token!]
  amounts: [BigInt!]
  duration: BigInt!

  timestamp: BigInt!
}

type Vest @entity {
  # Vest tx hash
  id: ID!

  beneficiary: User!
  pool: Pool!
  token: Token!
  timestamp: BigInt!
  value: BigInt!

  period: BigInt!

  txHash: String!
}

type Uniswap @entity {
  # Pool address
  id: ID!

  pool: Pool
}

type Collect @entity {
  # Collect tx hash
  id: ID!

  token0Fee: BigInt!
  token1Fee: BigInt!

  pool: Pool!

  timestamp: BigInt!
}

type Reinvest @entity {
  # Reinvest tx hash
  id: ID!

  pool: Pool!

  timestamp: BigInt!
}

type User @entity {
  # User address
  id: ID!

  managingPools: [Pool!] @derivedFrom(field: "manager")
  ownedPools: [Pool!] @derivedFrom(field: "owner")
  deposits: [Deposit!] @derivedFrom(field: "user")
  withdrawals: [Withdrawal!] @derivedFrom(field: "user")
  claimedRewards: [RewardClaim!] @derivedFrom(field: "user")
  rewardInitiations: [RewardInitiation!] @derivedFrom(field: "user")
  vests: [Vest!] @derivedFrom(field: "beneficiary")
}
